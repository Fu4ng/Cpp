
/*
描述
假设你有一个各位数字互不相同的四位数，把所有的数字从大到小排序后得到a,从小到大后得到b,然后用a-b替换原来这个数，并且继续操作。例如，从1234出发，依次可以得到4321-1234=3087、8730-378=8352、8532-2358=6174，又回到了它自己！现在要你写一个程序来判断一个四位数经过多少次这样的操作能出现循环，并且求出操作的次数
比如输入1234执行顺序是1234->3087->8352->6174->6174,输出是4
输入
第一行输入n,代表有n组测试数据。
接下来n行每行都写一个各位数字互不相同的四位数
输出
经过多少次上面描述的操作才能出现循环
样例输入
1
1234
样例输出
4
*/


#include<iostream>
using namespace std;
int iWeng(int n);
int main()
{
    int n,m;
    cin>>n;
    while(n-->0)
    {
        int num=1;
        cin>>m;
        while(m!=6174)
        {
            m=iWeng(m);
            num++;
        }
        cout<<num;

}
}

int iWeng(int n)//拆分以后得到最大值和最小值，在输出最大和最小只差
{
    int e[4],temp,i,j,max,min;
    e[3]=n%10;
    e[2]=(n/10)%10;
    e[1]=(n/100)%10;
    e[0]=(n/1000);
    for(i=0;i<4;i++)
        for(j=i;j<4;j++)
            if(e[i]>=e[j])
            {
                temp=e[i];
                e[i]=e[j];
                e[j]=temp;
        	}
    
    max=e[3]*1000+e[2]*100+e[1]*10+e[0];
    min=e[3]+e[2]*10+e[1]*100+e[0]*1000;
    return max-min;
}

